@page "/support"
@using System.ComponentModel.DataAnnotations
@using MLZ2025.Core.Services
@using MLZ2025.Shared.Model
@inject DataAccess<DatabaseAddress> DatabaseAddresses

<PageTitle>Support</PageTitle>

<h1>Hello</h1>

<!-- People List -->
<h2>People List</h2>
@if (addresses.Any())
{
    <ul>
        @foreach (var person in addresses)
        {
            <li>@person.LastName, @person.FirstName (@person.Email, @person.Phone)</li>
        }
    </ul>
}
else
{
    <p>No people added yet.</p>
}

<h2>Customer Form</h2>
<EditForm Model="@address" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label>First Name:</label>
        <InputText class="form-control" @bind-Value="address.FirstName" />
        <ValidationMessage For="@(() => address.FirstName)" />
    </div>
    <div class="mb-3">
        <label>Last Name:</label>
        <InputText class="form-control" @bind-Value="address.LastName" />
        <ValidationMessage For="@(() => address.LastName)" />
    </div>
    <div class="mb-3">
        <label>Email:</label>
        <InputText class="form-control" @bind-Value="address.Email" />
        <ValidationMessage For="@(() => address.Email)" />
    </div>
    <div class="mb-3">
        <label>Phone:</label>
        <InputText class="form-control" @bind-Value="address.Phone" />
        <ValidationMessage For="@(() => address.Phone)" />
    </div>
    <button type="submit" class="btn btn-success">Submit</button>
</EditForm>

@if (submitted)
{
    <div class="alert alert-success mt-3">
        <strong>Submitted Address:</strong><br />
        Name: @address.FirstName<br />
        Name: @address.LastName<br />
        Email: @address.Email<br />
        Phone: @address.Phone
    </div>
}

@code {

    private DatabaseAddress address = new();
    private bool submitted = false;

    // List to store people
    private List<DatabaseAddress> addresses = new();

    protected override async Task OnInitializedAsync()
    {
        addresses = DatabaseAddresses.Table().ToList() ?? new List<DatabaseAddress>();
    }

    private void HandleValidSubmit()
    {
        // Add new person to the list
        addresses.Add(address);

        submitted = true;

        DatabaseAddresses.Insert(address);

        // Reset the form
        address = new DatabaseAddress();
    }
}
